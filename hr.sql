select * from DEPARTMENT
select * from FILES
select * from PERSON
select * from POSITION
-- question 1
select * from PERSON where outdate is not null
-- question 2 - department - gender - person_count
select DP.DEPARTMENT, PR.GENDER, COUNT(PR.ID) AS PERSON_COUNT from PERSON PR
join DEPARTMENT DP 
ON PR.DEPARTMENTID = DP.ID
WHERE PR.OUTDATE IS NULL
GROUP BY DP.DEPARTMENT, PR.GENDER
ORDER BY 1,2

 -- OR
select 
DP.DEPARTMENT, 
CASE
		WHEN PR.GENDER ='E' THEN 'KİŞİ'
		WHEN PR.GENDER = 'K' THEN 'QADIN'
END AS GENDER,
COUNT(PR.ID) AS PERSON_COUNT from PERSON PR
join DEPARTMENT DP 
ON PR.DEPARTMENTID = DP.ID
GROUP BY DP.DEPARTMENT, GENDER
ORDER BY 1,2
-- question 3 - department - MALE_PERSONCOUNT - FEMALE_PERSON_COUNT 
select DP.DEPARTMENT, 
SUM(CASE 
WHEN PR.GENDER = 'E' THEN 1 ELSE 0
END) AS MALE_PERSONCOUNT,
SUM(CASE 
WHEN PR.GENDER = 'K' THEN 1 ELSE 0
END) AS FEMALE_PERSON_COUNT from PERSON PR
join DEPARTMENT DP 
ON PR.DEPARTMENTID = DP.ID
WHERE PR.OUTDATE IS NULL
GROUP BY DP.DEPARTMENT
ORDER BY 1

-- OR

select *,
(SELECT COUNT(*) FROM PERSON WHERE GENDER = 'K' AND PERSON.DEPARTMENTID = DP.ID AND  OUTDATE IS NULL) AS FEMALE_PERSONCOUNT,
(SELECT COUNT(*) FROM PERSON WHERE GENDER = 'E' AND PERSON.DEPARTMENTID = DP.ID AND OUTDATE IS NULL) AS MALE_PERSONCOUNT 
from DEPARTMENT DP
ORDER BY 1
-- question 4 - POSITION-MIN_SALARY-MAX_SALARY_AVG_SALARY
select * from PERSON
select * from POSITION
select 'PLANLAMA_SEFI' AS POSITION, MIN(SALARY) MIN_SALARY, MAX(SALARY) MAX_SALARY, ROUND(AVG(SALARY),0) AVG_SALARY from PERSON WHERE POSITIONID = 25

-- OR SUBQUERY ILE

SELECT 
PO.POSITION,
(SELECT MIN(SALARY) FROM PERSON WHERE POSITIONID = PO.ID) AS MIN_SALARY,
(SELECT MAX(SALARY) FROM PERSON WHERE POSITIONID = PO.ID) AS MAX_SALARY,
(SELECT AVG(SALARY) FROM PERSON WHERE POSITIONID = PO.ID) AS AVG_SALARY
FROM POSITION PO
WHERE PO.POSITION = 'PLANLAMA ŞEFİ'
-- question 5 - POSITION - PERSON_COUNT - AVG_SALARY
select * from PERSON
select * from POSITION

-- SUBQUERY ILE
select POSITION,
(SELECT COUNT(*) FROM PERSON WHERE PERSON.POSITIONID = PO.ID AND PERSON.OUTDATE IS NULL) AS PERSON_COUNT,
(SELECT AVG(SALARY) FROM PERSON  WHERE PERSON.POSITIONID = PO.ID AND PERSON.OUTDATE IS NULL) AS AVG_SALARY
from POSITION PO
ORDER BY 1
 -- OR 

 SELECT
 PO.POSITION,
 COUNT(PE.ID),
 AVG(PE.SALARY)
 FROM PERSON PE
 JOIN POSITION PO
 ON PO.ID = PE.POSITIONID
 WHERE PE.OUTDATE IS NULL
 GROUP BY  PO.POSITION
 ORDER BY 1



-- question 6 - YEAR - MALE_PERSON - FEMALE_PERSON
select YEAR(INDATE) YEAR,
SUM(CASE 
WHEN GENDER = 'E' THEN 1 ELSE 0
END) AS MALE_PERSON,
SUM(CASE 
WHEN GENDER = 'K' THEN 1 ELSE 0
END) AS FEMALE_PERSON
from PERSON
GROUP BY YEAR(INDATE)
ORDER BY 1

-- OR SUBQUERY

SELECT 
DISTINCT
YEAR(P.INDATE) YEAR,
(SELECT COUNT(*) FROM PERSON WHERE GENDER = 'K' AND YEAR(INDATE) = YEAR(P.INDATE)) AS FEMALE_PERSON,
(SELECT COUNT(*) FROM PERSON WHERE GENDER = 'E' AND YEAR(INDATE) = YEAR(P.INDATE)) AS MALE_PERSON
FROM PERSON P
ORDER BY 1
-- question 7 - PERSON-İNDATE-OUTDATE-WORKING_TIME
SELECT NAME_, INDATE, OUTDATE, 
CASE 
WHEN OUTDATE IS NULL THEN DATEDIFF(YY,INDATE, GETDATE())    ELSE DATEDIFF(YY,INDATE, OUTDATE)
END 
AS WORKING_TIME
FROM PERSON

-- OR UNION
SELECT NAME_, INDATE, OUTDATE, 
DATEDIFF(MONTH, INDATE, GETDATE()) AS WORKING_TIME
FROM PERSON WHERE OUTDATE IS NULL
UNION ALL
SELECT NAME_, INDATE, OUTDATE, 
DATEDIFF(MONTH, INDATE, OUTDATE) AS WORKINT_TIME
FROM PERSON WHERE OUTDATE IS NOT NULL

-- question 8 - SHORTNAME - PERSON_COUNT
SELECT  
CONCAT(LEFT(NAME_,1) + '.',LEFT(SURNAME,1) + '.' ) AS SHORTNAME,
COUNT(PERSON.ID) PERSON_COUNT
FROM PERSON 
GROUP BY CONCAT(LEFT(NAME_,1) + '.',LEFT(SURNAME,1) + '.' ) 
ORDER BY COUNT(*) DESC
-- question 9 - DEPARTMENT - AVGSALARY

SELECT DEPARTMENT, ROUND(AVG(P.SALARY),0) AVG_SALARY FROM PERSON P 
JOIN DEPARTMENT D
ON D.ID = P.DEPARTMENTID
GROUP BY DEPARTMENT
HAVING ROUND(AVG(P.SALARY),0) > 5500

-- OR SUBQUERY
SELECT
DEPARTMENT ,
( SELECT ROUND(AVG(SALARY),0) FROM PERSON WHERE PERSON.DEPARTMENTID = D.ID) AVGSALARY
FROM
DEPARTMENT D
WHERE ( SELECT ROUND(AVG(SALARY),0) FROM PERSON WHERE PERSON.DEPARTMENTID = D.ID)  > 5500
-- question 10 - DEPARTMENT - AVG_WORKINGTIME
SELECT T.DEPARTMENT, AVG(T.WORKINGTIME) AS AVG_WORKINGTIME FROM (
SELECT  D.DEPARTMENT,
CASE
WHEN OUTDATE IS NOT NULL THEN DATEDIFF(MONTH, INDATE, OUTDATE)
ELSE DATEDIFF(MONTH, INDATE, GETDATE())
END AS WORKINGTIME
FROM PERSON P JOIN 
DEPARTMENT D ON D.ID = P.DEPARTMENTID
) AS T 
GROUP BY T.DEPARTMENT
ORDER BY 1

-- question 11: PERSON - POSITION - MANAGER - MANAGER_POSITION
SELECT PE.NAME_ + ' ' + PE.SURNAME AS PERSON, PN.POSITION, PE2.NAME_  + ' ' + PE2.SURNAME AS MANAGER, PN2.POSITION
FROM PERSON PE 
JOIN POSITION PN ON PE.POSITIONID = PN.ID
JOIN PERSON PE2 ON PE.MANAGERID = PE2.ID
JOIN POSITION PN2 ON PE2.POSITIONID = PN2.ID


